(wintome) akane@shi-03:/workspace/akane/NAT/classification$ python3 test_impl.py
2.0.1
keys[0,0,0] = tensor([[1., 2., 3.],
        [1., 2., 3.],
        [1., 2., 3.],
        [1., 2., 3.],
        [1., 2., 3.],
        [2., 3., 4.],
        [2., 3., 4.],
        [2., 3., 4.],
        [2., 3., 4.]])
windowed_a[0,0,0] = tensor([[ 1.,  1.,  1.],
        [ 2.,  2.,  2.],
        [ 3.,  3.,  3.],
        [ 7.,  7.,  7.],
        [ 8.,  8.,  8.],
        [ 9.,  9.,  9.],
        [13., 13., 13.],
        [14., 14., 14.],
        [15., 15., 15.]])
metric.shape = torch.Size([1, 2, 2, 9, 3])
a[0,0,0] = tensor([[0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.3714, 0.5571, 0.7428],
        [0.3714, 0.5571, 0.7428]])
b[0,0,0] = tensor([[0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.3714, 0.5571, 0.7428],
        [0.3714, 0.5571, 0.7428]])
tensor([[0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.3714, 0.5571, 0.7428],
        [0.3714, 0.5571, 0.7428]])
a.shape = torch.Size([1, 2, 2, 5, 3])
b.shape = torch.Size([1, 2, 2, 4, 3])
scores.shape = torch.Size([1, 2, 2, 5, 4])
scores[0,0,0] = tensor([[1.0000, 1.0000, 0.9926, 0.9926],
        [1.0000, 1.0000, 0.9926, 0.9926],
        [1.0000, 1.0000, 0.9926, 0.9926],
        [0.9926, 0.9926, 1.0000, 1.0000],
        [0.9926, 0.9926, 1.0000, 1.0000]])
node_idx.shape = torch.Size([1, 2, 2, 5])
node_max.shape = torch.Size([1, 2, 2, 5])
node_idx[0,0,0] = tensor([0, 0, 0, 2, 2])
node_max[0,0,0] = tensor([1.0000, 1.0000, 1.0000, 1.0000, 1.0000])
edge_idx[0,0,0] = tensor([[3],
        [4],
        [0],
        [1],
        [2]])
src_idx = tensor([[[[[3],
           [4],
           [0],
           [1]],

          [[3],
           [4],
           [0],
           [1]]],


         [[[3],
           [4],
           [0],
           [1]],

          [[3],
           [4],
           [0],
           [1]]]]])
dst_idx = tensor([[[[[2],
           [2],
           [0],
           [0]],

          [[2],
           [2],
           [0],
           [0]]],


         [[[2],
           [2],
           [0],
           [0]],

          [[2],
           [2],
           [0],
           [0]]]]])
src[0,0,0] = tensor([[ 1.,  1.,  1.],
        [ 3.,  3.,  3.],
        [ 8.,  8.,  8.],
        [13., 13., 13.],
        [15., 15., 15.]])
dst[0,0,0] = tensor([[ 2.,  2.,  2.],
        [ 7.,  7.,  7.],
        [ 9.,  9.,  9.],
        [14., 14., 14.]])
unm_idx[0,0,0] = tensor([[2]])
src_idx[0,0,0] = tensor([[3],
        [4],
        [0],
        [1]])
dst_idx[0,0,0] = tensor([[2],
        [2],
        [0],
        [0]])
metric[0,0,0] = tensor([[0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.2673, 0.5345, 0.8018],
        [0.3714, 0.5571, 0.7428],
        [0.3714, 0.5571, 0.7428],
        [0.3714, 0.5571, 0.7428],
        [0.3714, 0.5571, 0.7428]])
unm_idx.shape = torch.Size([1, 2, 2, 1, 1])
src_idx.shape = torch.Size([1, 2, 2, 4, 1])
src[0,0,0] = tensor([[13., 13., 13.],
        [15., 15., 15.],
        [ 1.,  1.,  1.],
        [ 3.,  3.,  3.]])
merged[0,0,0] = tensor([[ 8.0000,  8.0000,  8.0000],
        [ 2.0000,  2.0000,  2.0000],
        [ 7.0000,  7.0000,  7.0000],
        [12.3333, 12.3333, 12.3333],
        [14.0000, 14.0000, 14.0000]])
